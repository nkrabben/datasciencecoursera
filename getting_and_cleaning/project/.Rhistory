library(RMySQL)
install.packages('RMySQL',type='source')
install.packages("RMySQL")
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
?install.packages
install.packages('RMySQL',type='source',configure.args = '/usr/local/mysql/')
install.packages('RMySQL',type='source',configure.args = '/usr/local/mysql/')
install.packages(RMySQL, type='source')
install.packages('RMySQL', type='source')
install.packages('RMySQL', type='source')
install.packages('RMySQL', type='source')
install.packages('RMySQL', type='source')
install.packages('RMySQL',type='source')
library(RMySQL)
.edu')
result<-dbGetQuery(ucscDB,"show databases;");dbDisconnect(ucscDB)
d
)
""
''
source('~/.active-rstudio-document')
result
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
allTables[1:5]
dbDisconnect(hg19)
?dbReadTable
source('http://bioconductor.org/biocLite.R')
biocLite('rhdf5')
library(rhdf5)
create = h5createFile('example.h5')
create
create = h5createGroup('example.h5','foo')
create = h5createGroup('example.h5','baa')
create = h5createGroup('example.h5','foo/foobaa')
h5ls(create)
h5ls('example.h5')
install.packages('httr')
library(httr)
myapp = oauth_app("github",key='4bf4146b7f95e2ace28c',secret='cc20f99d34749ed930e0fc6ee79e591baddad4e2')
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages('httpuv')
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
myapp = oauth_app("github",key='4bf4146b7f95e2ace28c',secret='cc20f99d34749ed930e0fc6ee79e591baddad4e2')
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
con = url ("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode
nchar(htmlCode[c(10,20,30,100)])
install.packages('foreign')
library(foreign)
?read.for
?read
?foreign
fHouse2URL<-'https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for'
fHouse2<-'xxx.for'
download.file(fHouse2URL, destfile=fHouse2,method='curl')
df <- read.fwf(fhouse2)
df <- read.fwf(fhouse2, c(16,13,13,13,8))
fHouse2URL<-'https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for'
fHouse2<-'xxx.for'
download.file(fHouse2URL, destfile=fHouse2,method='curl')
df <- read.fwf(fhouse2, c(16,13,13,13,8))
getwd()
df <- read.fwf('xxx.for', c(16,13,13,13,8))
df
head(df)
df <- read.fwf('xxx.for', c(16,13,13,13,8),skip=4)
head(df)
df <- read.fwf('xxx.for', c(13,13,13,13,8),skip=4)
df <- read.fwf('xxx.for', c(13,13,13,13,8),skip=4)
head(df)
df <- read.fwf('xxx.for', c(11,13,13,13,13),skip=4)
head(df)
df <- read.fwf('xxx.for', c(10,13,13,13,13),skip=4)
head(df)
df <- read.fwf('xxx.for', c(10,9,4,9,4,9,4,9,4),skip=4)
head(df)
sum(df[,4])
?unzip
unzip('getdata-projectfiles-UCI HAR Dataset.zip')
setwd('dev/datasciencecoursera')
unzip('getdata-projectfiles-UCI HAR Dataset.zip')
getwd()
setwd('clean_project')
unzip('getdata-projectfiles-UCI HAR Dataset.zip')
unzip('getdata-projectfiles-UCI HAR Dataset.zip')
dfTest<-read.tsv('test/X_test.txt')
?read.csv
dfTest<-read.tsv('test/X_test.txt',sep="/t")
dfTest<-read.csv('test/X_test.txt',sep="/t")
dfTest<-read.csv('UCI HAR Dataset/test/X_test.txt',sep="/t")
dfTest<-read.csv('UCI HAR Dataset/test/X_test.txt',sep=" ")
head(df)
dfTest<-read.table("UCI HAR Dataset/test/X_test.txt")
head(dfTest)
dfTrain<-read.table("UCI HAR Dataset/train/X_test.txt")
dfTrain<-read.table("UCI HAR Dataset/train/X_train.txt")
read.table("UCI HAR Dataset/train/subject_train.txt")
dfTrainSubject<-read.table("UCI HAR Dataset/train/subject_train.txt")
dfTraincbind(dfTrain,dfTrainSubject)
dfTrain<-cbind(dfTrain,dfTrainSubject)
dfTest<-cbind(read.table("UCI HAR Dataset/test/X_test.txt",
read.table("UCI HAR Dataset/test/Y_test.txt"),
read.table("UCI HAR Dataset/test/subject_test.txt"))
dfTest<-cbind(read.table("UCI HAR Dataset/test/X_test.txt"),
read.table("UCI HAR Dataset/test/Y_test.txt"),
read.table("UCI HAR Dataset/test/subject_test.txt"))
source('~/.active-rstudio-document')
unzip(download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'))
unzip(download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'),
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'),
)
'UCI HAR Dataset.zip')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip',
unzip('UCI HAR Dataset.zip')
)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip',
'UCI HAR Dataset.zip')
features<-read.table("UCI HAR Dataset/features.txt")
features[grep("mean",features[,2])]
features[grep("mean")]
features[grep("mean",features)]
features[grep("mean",features[[,2]])]
features[grep("mean",features[,2])]
names(features)<-c('column','feature')
features[grep("mean",features$feature)]
head[features]
head(features)
grep("mean",features$feature)
stdMeanCol<-c(grep("mean",features$feature),grep("std",features$feature))
stdMeanCol
dfStdMean<-dfTotal[,stdMeanCol]
?unz
dfTest<-cbind(read.table(unz("getdata-projectfiles-UCI HAR Dataset.zip", "test/X_test.txt")),
read.table("UCI HAR Dataset/test/Y_test.txt"),
read.table("UCI HAR Dataset/test/subject_test.txt"))
dfTest<-cbind(read.table(unz("getdata-projectfiles-UCI HAR Dataset.zip", "UCI HAR Dataset/test/X_test.txt")),
dfTest<-cbind(read.table(unz("getdata-projectfiles-UCI HAR Dataset.zip", "UCI HAR Dataset/test/X_test.txt")),
read.table("UCI HAR Dataset/test/Y_test.txt"),
read.table("UCI HAR Dataset/test/subject_test.txt"))
)
source('~/.active-rstudio-document')
read.table(unz(f, "UCI HAR Dataset/test/Y_test.txt"))
read.table(unz(f, "UCI HAR Dataset/test/X_test.txt"))
?grep
stdMeanCol<-c(grep("mean(",features$feature),grep("std(",features$feature))
stdMeanCol<-c(grep("mean\(",features$feature),grep("std\(",features$feature))
stdMeanCol<-c(grep("mean\\(",features$feature),grep("std\\(",features$feature))
dfStdMean<-dfTotal[,stdMeanCol]
library(datasets)
data(iris)
?iris
dn<-data(iris)
head(dn)
data(iris)
?iris
head(iris)
mean(iris$Sepal.Length)
apply(iris,1,mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
data(mtcars)
?mtcars
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
a<-tapply(mtcars$mpg, mtcars$cyl, mean)
a[1]-a[3]
?ls
ls
ls()
debug(ls)
ls()
exit
quit
quit
quit
exit
